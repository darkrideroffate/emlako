// <auto-generated />
using System;
using Emlakkko;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Emlakkko.Migrations
{
    [DbContext(typeof(emlakoContext))]
    [Migration("20201230163313_discount")]
    partial class discount
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Emlakkko.Admin", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("id")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("admin");
                });

            modelBuilder.Entity("Emlakkko.Adres", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Il")
                        .IsRequired()
                        .HasColumnName("il")
                        .HasColumnType("character varying(2044)")
                        .HasMaxLength(2044);

                    b.Property<string>("Ilce")
                        .IsRequired()
                        .HasColumnName("ilce")
                        .HasColumnType("character varying(2044)")
                        .HasMaxLength(2044);

                    b.Property<string>("Satir1")
                        .IsRequired()
                        .HasColumnName("satir1")
                        .HasColumnType("character varying(2044)")
                        .HasMaxLength(2044);

                    b.HasKey("Id");

                    b.ToTable("adres");
                });

            modelBuilder.Entity("Emlakkko.Esya", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("EsyaTipi")
                        .IsRequired()
                        .HasColumnName("esya_tipi")
                        .HasColumnType("character varying(2044)")
                        .HasMaxLength(2044);

                    b.Property<int>("EvId")
                        .HasColumnName("ev_id")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EvId");

                    b.ToTable("esya");
                });

            modelBuilder.Entity("Emlakkko.Ev", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("AdresId")
                        .HasColumnName("adres_id")
                        .HasColumnType("integer");

                    b.Property<int>("EvSahibiId")
                        .HasColumnName("ev_sahibi_id")
                        .HasColumnType("integer");

                    b.Property<string>("EvTipi")
                        .IsRequired()
                        .HasColumnName("ev_tipi")
                        .HasColumnType("character varying(2044)")
                        .HasMaxLength(2044);

                    b.Property<int>("KiraFiyati")
                        .HasColumnName("kira_fiyati")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("character varying(2044)")
                        .HasMaxLength(2044);

                    b.Property<int>("discount")
                        .HasColumnType("integer");

                    b.Property<int>("discountedPrice")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AdresId");

                    b.HasIndex("EvSahibiId");

                    b.ToTable("ev");
                });

            modelBuilder.Entity("Emlakkko.EvKira", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("EvId")
                        .HasColumnName("ev_id")
                        .HasColumnType("integer");

                    b.Property<int>("KiraFiyati")
                        .HasColumnName("kira_fiyati")
                        .HasColumnType("integer");

                    b.Property<int>("KiraciId")
                        .HasColumnName("kiraci_id")
                        .HasColumnType("integer");

                    b.Property<int>("PersonelId")
                        .HasColumnName("personel_id")
                        .HasColumnType("integer");

                    b.Property<string>("Sure")
                        .IsRequired()
                        .HasColumnName("sure")
                        .HasColumnType("character varying(2044)")
                        .HasMaxLength(2044);

                    b.HasKey("Id");

                    b.HasIndex("EvId");

                    b.HasIndex("KiraciId");

                    b.HasIndex("PersonelId");

                    b.ToTable("ev_kira");
                });

            modelBuilder.Entity("Emlakkko.EvSahibi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnName("ad")
                        .HasColumnType("character varying(2044)")
                        .HasMaxLength(2044);

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasColumnName("soyad")
                        .HasColumnType("character varying(2044)")
                        .HasMaxLength(2044);

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasColumnName("telefon")
                        .HasColumnType("character varying(2044)")
                        .HasMaxLength(2044);

                    b.HasKey("Id");

                    b.ToTable("ev_sahibi");
                });

            modelBuilder.Entity("Emlakkko.Fotograf", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("EvId")
                        .HasColumnName("ev_id")
                        .HasColumnType("integer");

                    b.Property<string>("File")
                        .IsRequired()
                        .HasColumnName("file")
                        .HasColumnType("character varying(2044)")
                        .HasMaxLength(2044);

                    b.HasKey("Id");

                    b.HasIndex("EvId");

                    b.ToTable("fotograf");
                });

            modelBuilder.Entity("Emlakkko.IlanKoy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("EvId")
                        .HasColumnName("ev_id")
                        .HasColumnType("integer");

                    b.Property<int>("OfisId")
                        .HasColumnName("ofis_id")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EvId");

                    b.HasIndex("OfisId");

                    b.ToTable("ilan_koy");
                });

            modelBuilder.Entity("Emlakkko.Kiraci", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnName("ad")
                        .HasColumnType("character varying(2044)")
                        .HasMaxLength(2044);

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasColumnName("soyad")
                        .HasColumnType("character varying(2044)")
                        .HasMaxLength(2044);

                    b.HasKey("Id");

                    b.ToTable("kiraci");
                });

            modelBuilder.Entity("Emlakkko.Oda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("EvId")
                        .HasColumnName("ev_id")
                        .HasColumnType("integer");

                    b.Property<string>("OdaTipi")
                        .IsRequired()
                        .HasColumnName("oda_tipi")
                        .HasColumnType("character varying(2044)")
                        .HasMaxLength(2044);

                    b.HasKey("Id");

                    b.HasIndex("EvId");

                    b.ToTable("oda");
                });

            modelBuilder.Entity("Emlakkko.Ofis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("character varying(2044)")
                        .HasMaxLength(2044);

                    b.HasKey("Id");

                    b.ToTable("ofis");
                });

            modelBuilder.Entity("Emlakkko.Ozellik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("EvId")
                        .HasColumnName("ev_id")
                        .HasColumnType("integer");

                    b.Property<string>("OzellikTipi")
                        .IsRequired()
                        .HasColumnName("ozellik_tipi")
                        .HasColumnType("character varying(2044)")
                        .HasMaxLength(2044);

                    b.HasKey("Id");

                    b.HasIndex("EvId");

                    b.ToTable("ozellik");
                });

            modelBuilder.Entity("Emlakkko.Personel", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("id")
                        .HasColumnType("integer");

                    b.Property<int>("OfisId")
                        .HasColumnName("ofis_id")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OfisId");

                    b.ToTable("personel");
                });

            modelBuilder.Entity("Emlakkko.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnName("ad")
                        .HasColumnType("character varying(2044)")
                        .HasMaxLength(2044);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("email")
                        .HasColumnType("character varying(2044)")
                        .HasMaxLength(2044);

                    b.Property<string>("Hash")
                        .IsRequired()
                        .HasColumnName("hash")
                        .HasColumnType("character varying(2044)")
                        .HasMaxLength(2044);

                    b.Property<string>("KisiTuru")
                        .IsRequired()
                        .HasColumnName("kisi_turu")
                        .HasColumnType("character varying(2044)")
                        .HasMaxLength(2044);

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnName("salt")
                        .HasColumnType("character varying(2044)")
                        .HasMaxLength(2044);

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasColumnName("soyad")
                        .HasColumnType("character varying(2044)")
                        .HasMaxLength(2044);

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("updated_at")
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasName("unique_user_email");

                    b.ToTable("user");
                });

            modelBuilder.Entity("Emlakkko.Admin", b =>
                {
                    b.HasOne("Emlakkko.User", "IdNavigation")
                        .WithOne("Admin")
                        .HasForeignKey("Emlakkko.Admin", "Id")
                        .HasConstraintName("useradmin")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Emlakkko.Esya", b =>
                {
                    b.HasOne("Emlakkko.Ev", "Ev")
                        .WithMany("Esya")
                        .HasForeignKey("EvId")
                        .HasConstraintName("ev_esya")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Emlakkko.Ev", b =>
                {
                    b.HasOne("Emlakkko.Adres", "Adres")
                        .WithMany("Ev")
                        .HasForeignKey("AdresId")
                        .HasConstraintName("ev_adress")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Emlakkko.EvSahibi", "EvSahibi")
                        .WithMany("Ev")
                        .HasForeignKey("EvSahibiId")
                        .HasConstraintName("ev_sahibi")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Emlakkko.EvKira", b =>
                {
                    b.HasOne("Emlakkko.Ev", "Ev")
                        .WithMany("EvKira")
                        .HasForeignKey("EvId")
                        .HasConstraintName("ev_kira_ev")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Emlakkko.Kiraci", "Kiraci")
                        .WithMany("EvKira")
                        .HasForeignKey("KiraciId")
                        .HasConstraintName("kiraci-evkira")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Emlakkko.Personel", "Personel")
                        .WithMany("EvKira")
                        .HasForeignKey("PersonelId")
                        .HasConstraintName("ev_kira_personel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Emlakkko.Fotograf", b =>
                {
                    b.HasOne("Emlakkko.Ev", "Ev")
                        .WithMany("Fotograf")
                        .HasForeignKey("EvId")
                        .HasConstraintName("ev_fotograf")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Emlakkko.IlanKoy", b =>
                {
                    b.HasOne("Emlakkko.Ev", "Ev")
                        .WithMany("IlanKoy")
                        .HasForeignKey("EvId")
                        .HasConstraintName("ev_ilan")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Emlakkko.Ofis", "Ofis")
                        .WithMany("IlanKoy")
                        .HasForeignKey("OfisId")
                        .HasConstraintName("ofis_ilan")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Emlakkko.Oda", b =>
                {
                    b.HasOne("Emlakkko.Ev", "Ev")
                        .WithMany("Oda")
                        .HasForeignKey("EvId")
                        .HasConstraintName("ev_oda")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Emlakkko.Ozellik", b =>
                {
                    b.HasOne("Emlakkko.Ev", "Ev")
                        .WithMany("Ozellik")
                        .HasForeignKey("EvId")
                        .HasConstraintName("ev_ozellik")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Emlakkko.Personel", b =>
                {
                    b.HasOne("Emlakkko.User", "IdNavigation")
                        .WithOne("Personel")
                        .HasForeignKey("Emlakkko.Personel", "Id")
                        .HasConstraintName("personeluser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Emlakkko.Ofis", "Ofis")
                        .WithMany("Personel")
                        .HasForeignKey("OfisId")
                        .HasConstraintName("personel_ofis")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
